name: CI Showcase

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      appium:
        image: appium/appium
        options: >-
          --publish 4723:4723

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          java-version: 11

      - name: Install system images for emulator (x86_64)
        run: |
          sdkmanager "system-images;android-30;google_apis;x86_64"

      - name: Update Emulator and SDK Packages
        run: |
          sdkmanager --update
          sdkmanager --install "emulator" "platform-tools" "platforms;android-30" "build-tools;30.0.3"

      - name: Install required libraries for emulator
        run: |
          sudo apt-get update
          sudo apt-get install -y libpulse0 libglu1-mesa

      - name: Modify config.ini for emulator
        run: |
          echo "hw.ramSize=2048" >> $ANDROID_HOME/.android/avd/test.avd/config.ini
          echo "vm.heapSize=256" >> $ANDROID_HOME/.android/avd/test.avd/config.ini

      - name: Verify Emulator Installation
        run: |
          export PATH=$PATH:$ANDROID_HOME/emulator
          which emulator
          emulator -version

      - name: Ensure Emulator is not running
        run: |
          pkill -f emulator || true

      - name: Create AVD without Google APIs
        run: |
          echo "no" | avdmanager create avd --force --name test --package 'system-images;android-30;x86_64' --device "Nexus 5X" --sdcard 512M

      - name: Start Android Emulator (No GPU, Software Rendering)
        run: |
          export PATH=$PATH:$ANDROID_HOME/emulator
          nohup $ANDROID_HOME/emulator/emulator -avd test -no-window -no-boot-anim -gpu swiftshader_indirect -no-accel -memory 2048 -no-snapshot-load &

      - name: Wait for Emulator to Boot
        run: |
          echo "Waiting for emulator to boot..."
          TIMEOUT=300  # Increased timeout
          COUNTER=0
          while ! adb devices | grep -q "emulator"; do
            if [ $COUNTER -ge $TIMEOUT ]; then
              echo "Emulator did not start in time!"
              exit 1
            fi
            sleep 5
            COUNTER=$((COUNTER+1))
            echo "Waiting for emulator to boot... ($COUNTER)"
          done
          adb shell input keyevent 82  # Unlock the emulator

      - name: Dismiss "System UI isn't responding" alert
        run: |
          adb shell 'am broadcast -a android.intent.action.MAIN -n com.android.systemui/.SystemUIService'
          adb shell input keyevent 4  # Simulate BACK key event to dismiss the popup

      - name: Run Selenium tests
        run: |
          pytest selenium_tests/ --maxfail=0 --disable-warnings -v

      - name: Run API tests
        run: |
          pytest api_tests/ --maxfail=0 --disable-warnings -v

      - name: Run Appium tests
        run: |
          pytest appium_tests/ --maxfail=0 --disable-warnings -v

      - name: Upload logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-logs
          path: ./logs
